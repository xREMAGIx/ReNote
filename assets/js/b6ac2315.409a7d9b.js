"use strict";(self.webpackChunkrenote=self.webpackChunkrenote||[]).push([[8115],{5454:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=s(5893),r=s(1151);const i={},c="NodeJS with Typescript",o={id:"setup-source/node/node-typescript",title:"NodeJS with Typescript",description:"This is a template for a Node project with Typescript.",source:"@site/docs/setup-source/node/node-typescript.mdx",sourceDirName:"setup-source/node",slug:"/setup-source/node/node-typescript",permalink:"/renote/docs/setup-source/node/node-typescript",draft:!1,unlisted:!1,editUrl:"https://github.com/xREMAGIx/renote/tree/main/docs/setup-source/node/node-typescript.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Setup sources for NodeJS",permalink:"/renote/docs/category/setup-sources-for-nodejs"},next:{title:"Setup sources for React",permalink:"/renote/docs/category/setup-sources-for-react"}},d={},l=[{value:"Init setup",id:"init-setup",level:2},{value:"Setup Node package.json",id:"setup-node-packagejson",level:3},{value:"Setup Typescript as a dev dependency",id:"setup-typescript-as-a-dev-dependency",level:3},{value:"Install ambient types",id:"install-ambient-types",level:3},{value:"Create tsconfig.json",id:"create-tsconfigjson",level:3},{value:"Create the <code>src</code> folder and create a <code>index.ts</code> file",id:"create-the-src-folder-and-create-a-indexts-file",level:3},{value:"Compiling Typescript",id:"compiling-typescript",level:3},{value:"Useful configurations",id:"useful-configurations",level:2},{value:"Cold reloading",id:"cold-reloading",level:3}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"nodejs-with-typescript",children:"NodeJS with Typescript"}),"\n",(0,t.jsx)(n.p,{children:"This is a template for a Node project with Typescript."}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["I followed this documentation to create this template: ",(0,t.jsx)(n.a,{href:"https://khalilstemmler.com/blogs/typescript/node-starter-project/",children:"How to Setup a TypeScript + Node.js Project"})]}),(0,t.jsx)(n.p,{children:"At the time this doc was written, the following versions were used:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Yarn: @1.22.19"}),"\n",(0,t.jsx)(n.li,{children:"Node: @18.18.2"}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"init-setup",children:"Init setup"}),"\n",(0,t.jsx)(n.p,{children:"We start by creating folder for our project."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir r-node-typescript\ncd r-node-typescript\n"})}),"\n",(0,t.jsx)(n.h3,{id:"setup-node-packagejson",children:"Setup Node package.json"}),"\n",(0,t.jsx)(n.p,{children:"Then we can initialize the project with Yarn."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn init -y\n"})}),"\n",(0,t.jsx)(n.h3,{id:"setup-typescript-as-a-dev-dependency",children:"Setup Typescript as a dev dependency"}),"\n",(0,t.jsx)(n.p,{children:"Then we can add Typescript to our project."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn add -D typescript\n"})}),"\n",(0,t.jsx)(n.h3,{id:"install-ambient-types",children:"Install ambient types"}),"\n",(0,t.jsx)(n.p,{children:"We can install ambient types for Node."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn add -D @types/node\n"})}),"\n",(0,t.jsx)(n.h3,{id:"create-tsconfigjson",children:"Create tsconfig.json"}),"\n",(0,t.jsxs)(n.p,{children:["We can create a ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," file with the following command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn tsc --init tsc --init --rootDir src --outDir build \\\n--esModuleInterop --resolveJsonModule --lib es6 \\\n--module commonjs --allowJs true --noImplicitAny true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can remove unnecessary options from the ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," file. Our ",(0,t.jsx)(n.code,{children:"tsconfig.json"})," file looks like this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "compilerOptions": {\n    "target": "es5",\n    "module": "commonjs",\n    "lib": ["es6"],\n    "allowJs": true,\n    "outDir": "build",\n    "rootDir": "src",\n    "strict": true,\n    "noImplicitAny": true,\n    "esModuleInterop": true,\n    "resolveJsonModule": true\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.h3,{id:"create-the-src-folder-and-create-a-indexts-file",children:["Create the ",(0,t.jsx)(n.code,{children:"src"})," folder and create a ",(0,t.jsx)(n.code,{children:"index.ts"})," file"]}),"\n",(0,t.jsxs)(n.p,{children:["We can create the ",(0,t.jsx)(n.code,{children:"src"})," folder and create a ",(0,t.jsx)(n.code,{children:"index.ts"})," file inside it."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mkdir src\ntouch src/index.ts\n"})}),"\n",(0,t.jsx)(n.h3,{id:"compiling-typescript",children:"Compiling Typescript"}),"\n",(0,t.jsx)(n.p,{children:"We can compile Typescript with the following command."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn tsc\n"})}),"\n",(0,t.jsx)(n.h2,{id:"useful-configurations",children:"Useful configurations"}),"\n",(0,t.jsx)(n.h3,{id:"cold-reloading",children:"Cold reloading"}),"\n",(0,t.jsxs)(n.p,{children:["We can install ",(0,t.jsx)(n.code,{children:"ts-node"})," to run Typescript files directly."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn add -D ts-node\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Then we can add ",(0,t.jsx)(n.code,{children:"nodemon"})," to have hot reloading."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"yarn add -D nodemon\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Add a ",(0,t.jsx)(n.code,{children:"nodemon.json"})," file with the following content."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "watch": ["src"],\n  "ext": ".ts,.js",\n  "ignore": [],\n  "exec": "ts-node ./src/index.ts"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Then we can add a script to our ",(0,t.jsx)(n.code,{children:"package.json"})," file."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "scripts": {\n    "start": "nodemon"\n  }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["By running ",(0,t.jsx)(n.code,{children:"yarn start"})," we can start our application."]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>o,a:()=>c});var t=s(7294);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);