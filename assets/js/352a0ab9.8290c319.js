"use strict";(self.webpackChunkrenote=self.webpackChunkrenote||[]).push([[2664],{1464:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>n,metadata:()=>o,toc:()=>c});var r=a(5893),i=a(1151);const n={sidebar_position:4},s="Operation-based Commutative Replicated Data Type (CmRDT)",o={id:"crdt/op-based-crdt",title:"Operation-based Commutative Replicated Data Type (CmRDT)",description:"Figures",source:"@site/docs/crdt/op-based-crdt.mdx",sourceDirName:"crdt",slug:"/crdt/op-based-crdt",permalink:"/renote/docs/crdt/op-based-crdt",draft:!1,unlisted:!1,editUrl:"https://github.com/xREMAGIx/renote/tree/main/docs/crdt/op-based-crdt.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"State-based Convergent Replicated Data Type (CvRDT)",permalink:"/renote/docs/crdt/state-based-crdt"},next:{title:"Relation between CvRDT and CmRDT",permalink:"/renote/docs/crdt/relation-cvrdt-cmrdt"}},d={},c=[{value:"Figures",id:"figures",level:2},{value:"Definition",id:"definition",level:2},{value:"Deep Dive",id:"deep-dive",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",img:"img",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"operation-based-commutative-replicated-data-type-cmrdt",children:"Operation-based Commutative Replicated Data Type (CmRDT)"}),"\n",(0,r.jsx)(t.h2,{id:"figures",children:"Figures"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Operation-based Replication",src:a(3017).Z+"",width:"762",height:"306"})}),"\n",(0,r.jsx)(t.h2,{id:"definition",children:"Definition"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Operation-based CRDTs (also called op-based CRDTs)"})," rely on the concept of operations, which are actions that change the state of the data structure. Each replica maintains a list of operations that it has performed, and these operations are propagated to other replicas. Each replica applies the operations it receives in the same order, ensuring that the state of the data structure remains consistent across all replicas."]}),"\n",(0,r.jsx)(t.h2,{id:"deep-dive",children:"Deep Dive"}),"\n",(0,r.jsx)(t.p,{children:"In an op-based object, a reliable broadcast channel guarantees that all updates are delivered at every replica, in the delivery orderdspecified by the data type. Operations not ordered bydare saidconcurrent; formallyf\u2225dg\u21d4f\u0338dg\u2227g\u0338df. If all concurrent operationscommute, then all execution orders consistent with delivery order are equivalent, and all replicas converge to the same state. Such an object is called a Commutative Replicated Data Type (CmRDT)."}),"\n",(0,r.jsx)(t.p,{children:"As noted earlier, for all data types studied here, causal delivery (which is readily implementable in static distributed systems and does not require consensus) satisfies delivery ordered. For some data types, a weaker ordering suffices, but then more pairs of operations need to be proved commutative."}),"\n",(0,r.jsxs)(t.p,{children:["Ref: ",(0,r.jsx)(t.a,{href:"https://inria.hal.science/inria-00555588/document",children:"A comprehensive study of Convergent and Commutative Replicated Data Types"})]})]})}function p(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},3017:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/operationBasedReplication-75fd5df4d360b3b1205df59c62d109e5.png"},1151:(e,t,a)=>{a.d(t,{Z:()=>o,a:()=>s});var r=a(7294);const i={},n=r.createContext(i);function s(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);