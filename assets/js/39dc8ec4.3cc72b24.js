"use strict";(self.webpackChunkrenote=self.webpackChunkrenote||[]).push([[8094],{2662:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var i=r(5893),o=r(1151);const n={},s="Create a Git repository",a={id:"git/create-git-repo",title:"Create a Git repository",description:"New repository",source:"@site/docs/git/create-git-repo.mdx",sourceDirName:"git",slug:"/git/create-git-repo",permalink:"/renote/docs/git/create-git-repo",draft:!1,unlisted:!1,editUrl:"https://github.com/xREMAGIx/renote/tree/main/docs/git/create-git-repo.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/renote/docs/category/git"},next:{title:"GitHub",permalink:"/renote/docs/category/github"}},c={},l=[{value:"New repository",id:"new-repository",level:2},{value:"Initialize the repository",id:"initialize-the-repository",level:3},{value:"Add gitignore file",id:"add-gitignore-file",level:3},{value:"Add all files to the repository",id:"add-all-files-to-the-repository",level:3},{value:"Commit the changes",id:"commit-the-changes",level:3},{value:"Connect to a remote repository",id:"connect-to-a-remote-repository",level:2},{value:"Create a new repository",id:"create-a-new-repository",level:3},{value:"Add the remote repository",id:"add-the-remote-repository",level:3},{value:"Verifty the remote repository",id:"verifty-the-remote-repository",level:3},{value:"Setup the upstream branch",id:"setup-the-upstream-branch",level:3},{value:"Push the changes to the remote repository",id:"push-the-changes-to-the-remote-repository",level:3},{value:"Existing repository",id:"existing-repository",level:2},{value:"Create a new branch",id:"create-a-new-branch",level:3},{value:"Push changes to a remote repository",id:"push-changes-to-a-remote-repository",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"create-a-git-repository",children:"Create a Git repository"}),"\n",(0,i.jsx)(t.h2,{id:"new-repository",children:"New repository"}),"\n",(0,i.jsx)(t.h3,{id:"initialize-the-repository",children:"Initialize the repository"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git init\n"})}),"\n",(0,i.jsx)(t.h3,{id:"add-gitignore-file",children:"Add gitignore file"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"touch .gitignore\n"})}),"\n",(0,i.jsx)(t.p,{children:"Add the following to the .gitignore file"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"# Ignore node_modules folder\nnode_modules\n.node_modules\n"})}),"\n",(0,i.jsx)(t.h3,{id:"add-all-files-to-the-repository",children:"Add all files to the repository"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git add .\n"})}),"\n",(0,i.jsx)(t.h3,{id:"commit-the-changes",children:"Commit the changes"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'git commit -m "Initial commit"\n'})}),"\n",(0,i.jsx)(t.h2,{id:"connect-to-a-remote-repository",children:"Connect to a remote repository"}),"\n",(0,i.jsx)(t.h3,{id:"create-a-new-repository",children:"Create a new repository"}),"\n",(0,i.jsx)(t.p,{children:"Follow the instructions to create a new repository."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://docs.github.com/en/repositories/creating-and-managing-repositories/quickstart-for-repositories",children:"GitHub create a new repository"})}),"\n",(0,i.jsx)(t.h3,{id:"add-the-remote-repository",children:"Add the remote repository"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git remote add origin <url>\n"})}),"\n",(0,i.jsx)(t.h3,{id:"verifty-the-remote-repository",children:"Verifty the remote repository"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git remote -v\n"})}),"\n",(0,i.jsx)(t.h3,{id:"setup-the-upstream-branch",children:"Setup the upstream branch"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git remote --set-upstream origin <branch-name>\n"})}),"\n",(0,i.jsx)(t.h3,{id:"push-the-changes-to-the-remote-repository",children:"Push the changes to the remote repository"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git push origin <branch-name>\n"})}),"\n",(0,i.jsx)(t.h2,{id:"existing-repository",children:"Existing repository"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git clone <url>\n"})}),"\n",(0,i.jsx)(t.h3,{id:"create-a-new-branch",children:"Create a new branch"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git checkout -b <branch-name>\n"})}),"\n",(0,i.jsx)(t.h3,{id:"push-changes-to-a-remote-repository",children:"Push changes to a remote repository"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"git push origin <branch-name>\n"})})]})}function d(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>s});var i=r(7294);const o={},n=i.createContext(o);function s(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);