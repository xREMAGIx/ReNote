"use strict";(self.webpackChunkrenote=self.webpackChunkrenote||[]).push([[7606],{8408:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=n(5893),r=n(1151);const i={},a="References",o={id:"crdt/references",title:"References",description:"All resources that I used to note about this article.",source:"@site/docs/crdt/references.md",sourceDirName:"crdt",slug:"/crdt/references",permalink:"/renote/docs/crdt/references",draft:!1,unlisted:!1,editUrl:"https://github.com/xREMAGIx/renote/tree/main/docs/crdt/references.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Set CRDTs",permalink:"/renote/docs/crdt/set-crdts"},next:{title:"Yjs Framework",permalink:"/renote/docs/crdt/yjs-framework"}},c={},d=[{value:"Shorthand Words",id:"shorthand-words",level:2},{value:"Defines",id:"defines",level:2},{value:"Monotonic semilattice object",id:"monotonic-semilattice-object",level:3},{value:"Commutativity",id:"commutativity",level:3},{value:"Papers",id:"papers",level:2},{value:"Blogs",id:"blogs",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"references",children:"References"}),"\n",(0,s.jsx)(t.p,{children:"All resources that I used to note about this article."}),"\n",(0,s.jsx)(t.h2,{id:"shorthand-words",children:"Shorthand Words"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"LUB"}),": Least upper bound"]}),"\n",(0,s.jsx)(t.h2,{id:"defines",children:"Defines"}),"\n",(0,s.jsx)(t.h3,{id:"monotonic-semilattice-object",children:"Monotonic semilattice object"}),"\n",(0,s.jsx)(t.p,{children:"A state-based object, equipped with partial order\xa0\u2264, noted\xa0(S,\u2264,s0,q,u,m), that has the following properties, is called a monotonic semi-lattice:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Set\xa0S\xa0of payload values forms a semilattice ordered by\xa0\u2264."}),"\n",(0,s.jsx)(t.li,{children:"Merging state\xa0s\xa0with remote state\xa0s\u2032\xa0computes the LUB of the two states, i.e.,\xa0s\xa0-\xa0m(s\u2032\xa0) =\xa0s\xa0\u2294\xa0s\u2032\xa0."}),"\n",(0,s.jsx)(t.li,{children:"State is monotonically non-decreasing across updates, i.e.,\xa0s\xa0\u2264\xa0s\xa0-\xa0u"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"commutativity",children:"Commutativity"}),"\n",(0,s.jsx)(t.p,{children:"Operations\xa0f\xa0and\xa0g\xa0commute, if for any reachable replica state\xa0S\xa0where their source pre-condition is enabled, the source precondition of\xa0f\xa0(resp.\xa0g) remains enabled in state\xa0S\xa0-\xa0g\xa0(resp.\xa0S\xa0-\xa0f), and\xa0S\xa0-\xa0f\xa0-\xa0g\xa0and\xa0S\xa0-\xa0f\xa0-\xa0g\xa0are equivalent abstract states."}),"\n",(0,s.jsx)(t.h2,{id:"papers",children:"Papers"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://inria.hal.science/inria-00555588/document",children:"A comprehensive study of Convergent and Commutative Replicated Data Types"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://inria.hal.science/inria-00609399v1/document",children:"Conflict-free Replicated Data Types"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://arxiv.org/pdf/1806.10254.pdf",children:"Conflict-free Replicated Data Types: An Overview"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://www.researchgate.net/publication/310212186_Near_Real-Time_Peer-to-Peer_Shared_Editing_on_Extensible_Data_Types",children:"Near Real-Time Peer-to-Peer Shared Editing on Extensible Data Types"})}),"\n",(0,s.jsx)(t.h2,{id:"blogs",children:"Blogs"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://www.bartoszsypytkowski.com/the-state-of-a-state-based-crdts/",children:"An introduction to state-based CRDTs"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://www.bartoszsypytkowski.com/yata/",children:"Delta-state CRDTs: indexed sequences with YATA"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://medium.com/@amberovsky/crdt-conflict-free-replicated-data-types-b4bfc8459d26",children:"CRDT: Conflict-free Replicated Data Types"})})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var s=n(7294);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);