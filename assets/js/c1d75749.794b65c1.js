"use strict";(self.webpackChunkrenote=self.webpackChunkrenote||[]).push([[3103],{9744:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var o=i(5893),s=i(1151);const t={sidebar_position:4},r="Containerize JavaScript application",d={id:"docker/containerize-js-app",title:"Containerize JavaScript application",description:"Write the development Dockerfile",source:"@site/docs/docker/containerize-js-app.md",sourceDirName:"docker",slug:"/docker/containerize-js-app",permalink:"/renote/docs/docker/containerize-js-app",draft:!1,unlisted:!1,editUrl:"https://github.com/xREMAGIx/renote/tree/main/docs/docker/containerize-js-app.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Container Manipulation",permalink:"/renote/docs/docker/container-manipulation"},next:{title:"Network Manipulation",permalink:"/renote/docs/docker/network-manipulcation"}},c={},l=[{value:"Write the development Dockerfile",id:"write-the-development-dockerfile",level:2},{value:"Work with Bind mount",id:"work-with-bind-mount",level:2},{value:"Work with Anonymous volumes",id:"work-with-anonymous-volumes",level:2},{value:"Perform multi-staged builds",id:"perform-multi-staged-builds",level:2},{value:"Ignore Unnecessary Files",id:"ignore-unnecessary-files",level:2},{value:"References",id:"references",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"containerize-javascript-application",children:"Containerize JavaScript application"}),"\n",(0,o.jsx)(n.h2,{id:"write-the-development-dockerfile",children:"Write the development Dockerfile"}),"\n",(0,o.jsx)(n.p,{children:"For example, we create a develop Dockerfile for Vite project"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="Dockerfile"',children:'FROM node:lts-alpine\n\nEXPOSE 3000\n\nUSER node\n\nRUN mkdir -p /home/node/app\n\nWORKDIR /home/node/app\n\nCOPY ./package.json .\nRUN npm install\n\nCOPY . .\n\nCMD [ "npm", "run", "dev" ]\n'})}),"\n",(0,o.jsx)(n.p,{children:"Follow these steps:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Get a good base image for running JavaScript applications"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"FROM"})," instruction here sets the official Node.js image as the base."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"USER"})," instruction sets the default user for the image to node. By default Docker runs containers as the root user."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["For more information about ",(0,o.jsx)(n.code,{children:"USER"})," instruction setup, ref:\n",(0,o.jsx)(n.a,{href:"https://github.com/nodejs/docker-node/blob/main/docs/BestPractices.md",children:"Docker and NodeJS best practice"})]})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Set the default working directory inside the image."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"RUN mkdir -p /home/node/app"})," instruction creates a directory called ",(0,o.jsx)(n.code,{children:"app"})," inside the home directory of the ",(0,o.jsx)(n.code,{children:"node"})," user."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Copy the package.json file into the image."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"WORKDIR"})," instruction sets the default working directory to the newly created ",(0,o.jsx)(n.code,{children:"/home/node/app"})," directory."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Install necessary dependencies."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"COPY"})," instruction here copies the ",(0,o.jsx)(n.code,{children:"package.json"})," file which contains information regarding all the necessary dependencies for this application."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Copy the rest of the project files."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"COPY"})," instruction copies the rest of the content from the current directory (",(0,o.jsx)(n.code,{children:"."}),") of the host filesystem to the working directory (",(0,o.jsx)(n.code,{children:"."}),") inside the image"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Start the vite development server by executing npm run dev command."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The ",(0,o.jsx)(n.code,{children:"CMD"})," instruction here sets the default command for this image which is ",(0,o.jsx)(n.code,{children:"npm run "}),"dev written in ",(0,o.jsx)(n.code,{children:"exec"})," form."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Now, to build an image from this ",(0,o.jsx)(n.code,{children:"Dockerfile.dev"}),", if the filename is not ",(0,o.jsx)(n.code,{children:"Dockerfile"})," you have to explicitly pass the filename using the ",(0,o.jsx)(n.code,{children:"--file"})," option:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'docker image build --file Dockerfile.dev --tag hello-dock:dev .\n\n# Step 1/7 : FROM node:lts\n#  ---\x3e b90fa0d7cbd1\n# Step 2/7 : EXPOSE 3000\n#  ---\x3e Running in 722d639badc7\n# Removing intermediate container 722d639badc7\n#  ---\x3e e2a8aa88790e\n# Step 3/7 : WORKDIR /app\n#  ---\x3e Running in 998e254b4d22\n# Removing intermediate container 998e254b4d22\n#  ---\x3e 6bd4c42892a4\n# Step 4/7 : COPY ./package.json .\n#  ---\x3e 24fc5164a1dc\n# Step 5/7 : RUN npm install\n#  ---\x3e Running in 23b4de3f930b\n### LONG INSTALLATION STUFF GOES HERE ###\n# Removing intermediate container 23b4de3f930b\n#  ---\x3e c17ecb19a210\n# Step 6/7 : COPY . .\n#  ---\x3e afb6d9a1bc76\n# Step 7/7 : CMD [ "npm", "run", "dev" ]\n#  ---\x3e Running in a7ff529c28fe\n# Removing intermediate container a7ff529c28fe\n#  ---\x3e 1792250adb79\n# Successfully built 1792250adb79\n# Successfully tagged hello-dock:dev\n'})}),"\n",(0,o.jsx)(n.p,{children:"Then we can exucute it by running:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker container run \\\n    --rm \\\n    --detach \\\n    --publish 3000:3000 \\\n    --name hello-dock-dev \\\n    hello-dock:dev\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Now you can see it at ",(0,o.jsx)(n.code,{children:"http://127.0.0.1:3000"})]}),"\n",(0,o.jsx)(n.h2,{id:"work-with-bind-mount",children:"Work with Bind mount"}),"\n",(0,o.jsx)(n.p,{children:"Front-end JavaScript framework server usually come with a hot reload feature."}),"\n",(0,o.jsx)(n.p,{children:"If you make any changes in your code right now, you'll see nothing happening to your application running in the browser."}),"\n",(0,o.jsx)(n.p,{children:"This is because you're making changes in the code that you have in your local file system but the application you're seeing in the browser resides inside the container file system."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://www.freecodecamp.org/news/content/images/2021/01/local-vs-container-file-system.svg",alt:"Local vs container file system"})}),"\n",(0,o.jsxs)(n.p,{children:["We can use ",(0,o.jsx)(n.strong,{children:"Bind mount"})," to solve this problem."]}),"\n",(0,o.jsx)(n.p,{children:"Instead of making a copy of the local file system, the bind mount can reference the local file system directly from inside the container."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"https://www.freecodecamp.org/news/content/images/2021/01/bind-mounts.svg",alt:"Bind mount"})}),"\n",(0,o.jsxs)(n.p,{children:["Bind mounts can be created using the ",(0,o.jsx)(n.code,{children:"--volume"})," or ",(0,o.jsx)(n.code,{children:"-v"})," option for the container run or container start commands."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"--volume <local file system directory absolute path>:<container file system directory absolute path>:<read write access>\n"})}),"\n",(0,o.jsx)(n.p,{children:"We can execute following commands to bind mount file:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker container run \\\n    --rm \\\n    --publish 3000:3000 \\\n    --name hello-dock-dev \\\n    --volume $(pwd):/home/node/app \\\n    hello-dock:dev\n\n# sh: 1: vite: not found\n# npm ERR! code ELIFECYCLE\n# npm ERR! syscall spawn\n# npm ERR! file sh\n# npm ERR! errno ENOENT\n# npm ERR! hello-dock@0.0.0 dev: `vite`\n# npm ERR! spawn ENOENT\n# npm ERR!\n# npm ERR! Failed at the hello-dock@0.0.0 dev script.\n# npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\n# npm WARN Local package.json exists, but node_modules missing, did you mean to install?\n"})}),"\n",(0,o.jsx)(n.p,{children:"This solve the issue of hot reload, but it will introduce new problem. We will talk about it in the next section."}),"\n",(0,o.jsx)(n.h2,{id:"work-with-anonymous-volumes",children:"Work with Anonymous volumes"}),"\n",(0,o.jsxs)(n.p,{children:["When you mount local file system as a volume inside the container, ",(0,o.jsx)(n.em,{children:"all the content inside the container will be replaced"}),". That's why we see the problem above."]}),"\n",(0,o.jsx)(n.p,{children:"This can be solve by using anonymous volume."}),"\n",(0,o.jsxs)(n.p,{children:["An anonymous volume is identical to a bind mount except that you ",(0,o.jsx)(n.strong,{children:"don't need to specify the source directory"})," here."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"--volume <container file system directory absolute path>:<read write access>\n"})}),"\n",(0,o.jsx)(n.p,{children:"So now, our command will look like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker container run \\\n    --rm \\\n    --detach \\\n    --publish 3000:3000 \\\n    --name hello-dock-dev \\\n    --volume $(pwd):/home/node/app \\\n    --volume /home/node/app/node_modules \\\n    hello-dock:dev\n\n# 53d1cfdb3ef148eb6370e338749836160f75f076d0fbec3c2a9b059a8992de8b\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Docker will take the entire ",(0,o.jsx)(n.code,{children:"node_modules"})," directory from inside the container and tuck it away in some other directory managed by the Docker daemon on your host file system and will mount that directory as ",(0,o.jsx)(n.code,{children:"node_modules"})," inside the container."]}),"\n",(0,o.jsx)(n.h2,{id:"perform-multi-staged-builds",children:"Perform multi-staged builds"}),"\n",(0,o.jsx)(n.p,{children:"For those Frontend frameworks:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.strong,{children:"development mode"})," the ",(0,o.jsx)(n.code,{children:"npm run serve"})," command starts a development server that serves the application to the user. That server not only serves the files but also provides the hot reload feature."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.strong,{children:"production mode"}),", the ",(0,o.jsx)(n.code,{children:"npm run build"})," command compiles all your JavaScript code into some static HTML, CSS, and JavaScript files. To run these files you don't need node or any other runtime dependencies. All you need is a server like ",(0,o.jsx)(n.code,{children:"nginx"})," for example."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["To create an image in ",(0,o.jsx)(n.strong,{children:"production mode"}),", we can use this approach:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use ",(0,o.jsx)(n.code,{children:"node"})," image as the base and build the application."]}),"\n",(0,o.jsxs)(n.li,{children:["Copy the files created using the ",(0,o.jsx)(n.code,{children:"node"})," image to an ",(0,o.jsx)(n.code,{children:"nginx"})," image."]}),"\n",(0,o.jsxs)(n.li,{children:["Create the final image based on ",(0,o.jsx)(n.code,{children:"nginx"})," and discard all ",(0,o.jsx)(n.code,{children:"node"})," related stuff."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["This approach is a multi-staged build. To perform such a build, create a new ",(0,o.jsx)(n.code,{children:"Dockerfile"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="Dockerfile"',children:"FROM node:lts-alpine as builder\n\nWORKDIR /app\n\nCOPY ./package.json ./\nRUN npm install\n\nCOPY . .\nRUN npm run build\n\nFROM nginx:stable-alpine\n\nEXPOSE 80\n\nCOPY --from=builder /app/dist /usr/share/nginx/html\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The first ",(0,o.jsx)(n.code,{children:"FROM"})," using ",(0,o.jsx)(n.code,{children:"node:lts-alpine"})," as the base image. The ",(0,o.jsx)(n.code,{children:"as builder"})," syntax assigns a name to this stage so that it can be referred to later on."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Create ",(0,o.jsx)(n.code,{children:"node"})," image"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"WORKDIR"})," command is used to define the working directory of a Docker container at any given time."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["We will use (or create new if not any) ",(0,o.jsx)(n.code,{children:"/app"})," folder and put all related files in it"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"COPY"})," commands are used to add files from your Docker client's current directory to container destination directory\nand the ",(0,o.jsx)(n.code,{children:"RUN"})," commands are used to execute scripts that need for installation."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["We copy ",(0,o.jsx)(n.code,{children:"package.json"})," from current directory to ",(0,o.jsx)(n.code,{children:"/"})," directory then execute ",(0,o.jsx)(n.code,{children:"npm install"}),". After that, we continue to copy all the files into ",(0,o.jsx)(n.code,{children:"/app"})," in container and using ",(0,o.jsx)(n.code,{children:"npm run build"})," to build the application."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The second ",(0,o.jsx)(n.code,{children:"FROM"})," start the second stage of the build using ",(0,o.jsx)(n.code,{children:"nginx:stable-alpine"})," as the base image"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Create ",(0,o.jsx)(n.code,{children:"nginx"})," image"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"EXPOSE"})," command tell the NGINX server to runs on port 80 by default"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The last ",(0,o.jsx)(n.code,{children:"COPY"})," command with the ",(0,o.jsx)(n.code,{children:"--from=builder"})," part indicates that you want to copy some files from the builder stage. After that it's a standard copy instruction where ",(0,o.jsx)(n.code,{children:"/app/dis"}),"t is the source and ",(0,o.jsx)(n.code,{children:"/usr/share/nginx/html"})," is the destination"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"To build this image execute the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'docker image build --tag hello-dock:prod .\n\n# Step 1/9 : FROM node:lts-alpine as builder\n#  ---\x3e 72aaced1868f\n# Step 2/9 : WORKDIR /app\n#  ---\x3e Running in e361c5c866dd\n# Removing intermediate container e361c5c866dd\n#  ---\x3e 241b4b97b34c\n# Step 3/9 : COPY ./package.json ./\n#  ---\x3e 6c594c5d2300\n# Step 4/9 : RUN npm install\n#  ---\x3e Running in 6dfabf0ee9f8\n# npm WARN deprecated fsevents@2.1.3: Please update to v 2.2.x\n#\n# > esbuild@0.8.29 postinstall /app/node_modules/esbuild\n# > node install.js\n#\n# npm notice created a lockfile as package-lock.json. You should commit this file.\n# npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.1.2 (node_modules/chokidar/node_modules/fsevents):\n# npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})\n# npm WARN hello-dock@0.0.0 No description\n# npm WARN hello-dock@0.0.0 No repository field.\n# npm WARN hello-dock@0.0.0 No license field.\n#\n# added 327 packages from 301 contributors and audited 329 packages in 35.971s\n#\n# 26 packages are looking for funding\n#   run `npm fund` for details\n#\n# found 0 vulnerabilities\n#\n# Removing intermediate container 6dfabf0ee9f8\n#  ---\x3e 21fd1b065314\n# Step 5/9 : COPY . .\n#  ---\x3e 43243f95bff7\n# Step 6/9 : RUN npm run build\n#  ---\x3e Running in 4d918cf18584\n#\n# > hello-dock@0.0.0 build /app\n# > vite build\n#\n# - Building production bundle...\n#\n# [write] dist/index.html 0.39kb, brotli: 0.15kb\n# [write] dist/_assets/docker-handbook-github.3adb4865.webp 12.32kb\n# [write] dist/_assets/index.eabcae90.js 42.56kb, brotli: 15.40kb\n# [write] dist/_assets/style.0637ccc5.css 0.16kb, brotli: 0.10kb\n# - Building production bundle...\n#\n# Build completed in 1.71s.\n#\n# Removing intermediate container 4d918cf18584\n#  ---\x3e 187fb3e82d0d\n# Step 7/9 : EXPOSE 80\n#  ---\x3e Running in b3aab5cf5975\n# Removing intermediate container b3aab5cf5975\n#  ---\x3e d6fcc058cfda\n# Step 8/9 : FROM nginx:stable-alpine\n# stable: Pulling from library/nginx\n# 6ec7b7d162b2: Already exists\n# 43876acb2da3: Pull complete\n# 7a79edd1e27b: Pull complete\n# eea03077c87e: Pull complete\n# eba7631b45c5: Pull complete\n# Digest: sha256:2eea9f5d6fff078ad6cc6c961ab11b8314efd91fb8480b5d054c7057a619e0c3\n# Status: Downloaded newer image for nginx:stable\n#  ---\x3e 05f64a802c26\n# Step 9/9 : COPY --from=builder /app/dist /usr/share/nginx/html\n#  ---\x3e 8c6dfc34a10d\n# Successfully built 8c6dfc34a10d\n# Successfully tagged hello-dock:prod\n\n'})}),"\n",(0,o.jsx)(n.p,{children:"Once the image has been built, you may run a new container by executing the following command:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker container run \\\n    --rm \\\n    --detach \\\n    --name hello-dock-prod \\\n    --publish 8080:80 \\\n    hello-dock:prod\n\n# 224aaba432bb09aca518fdd0365875895c2f5121eb668b2e7b2d5a99c019b953\n"})}),"\n",(0,o.jsx)(n.p,{children:"Multi-staged builds can be very useful if you're building large applications with a lot of dependencies."}),"\n",(0,o.jsx)(n.h2,{id:"ignore-unnecessary-files",children:"Ignore Unnecessary Files"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:".dockerignore"})," file contains a list of files and directories to be excluded from image builds."]}),"\n",(0,o.jsx)(n.p,{children:"For example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title=".dockerignore"',children:".git\n*Dockerfile*\n*docker-compose*\nnode_modules\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This ",(0,o.jsx)(n.code,{children:".dockerignore"})," file has to be in the build context. Files and directories mentioned here will be ignored by the ",(0,o.jsx)(n.code,{children:"COPY"})," instruction."]}),"\n",(0,o.jsxs)(n.p,{children:["But if you do a ",(0,o.jsx)(n.strong,{children:"bind mount"}),", the ",(0,o.jsx)(n.code,{children:".dockerignore"})," file will have no effect."]}),"\n",(0,o.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://www.freecodecamp.org/news/the-docker-handbook/#how-to-containerize-a-javascript-application",children:"Docker Handbook"})})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>r});var o=i(7294);const s={},t=o.createContext(s);function r(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);